@use '../base/variables' as *;
@use '../base/mixins' as *;

// ==========================================================================
// Table Components
// ==========================================================================

// Table container
.table-container {
  background: $bg-primary;
  border-radius: $border-radius-xxl;
  box-shadow: $shadow-md;
  overflow: hidden;
  min-height: 400px;
  width: 100%;
  overflow-y: auto;
  overflow-x: auto;
  
  // Loading state
  &.loading {
    position: relative;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.9);
      @include flex-center;
      z-index: 10;
    }
    
    &::after {
      content: 'Loading...';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 11;
      font-size: $font-size-lg;
      color: $text-secondary;
    }
  }

  // Music table
  .music-table {
    width: 100%;
    border-collapse: collapse;
    table-layout: auto;
    background: $bg-primary;
    min-height: 400px;

    thead {
      position: sticky;
      top: 0;
      z-index: 10;
      background: $bg-primary;
      height: 60px;
      
      tr {
        height: 60px;

        th {
          @include table-header-base;
          height: 60px;
          border-bottom: 1px solid $border-color;

          &.sortable-header {
            cursor: pointer;
            user-select: none;
            position: relative;
            transition: background-color $transition-fast;
            
            &:hover {
              background-color: $bg-light !important;
            }
            
            &.sort-asc .sort-indicator::after {
              content: ' ▲';
              color: $link-color;
              font-weight: bold;
            }
            
            &.sort-desc .sort-indicator::after {
              content: ' ▼';
              color: $link-color;
              font-weight: bold;
            }

            .sort-indicator {
              display: inline-block;
              margin-left: $spacing-sm;
              font-size: 0.8em;
            }
          }
        }
      }
    }

    tbody {
      // Don't set background here - let dark mode CSS handle it
      min-height: 140px;
      
      tr {
        height: 80px;
        
        &:hover {
          background: $bg-secondary;
        }
        
        &:only-child td.empty-state {
          border-bottom: none;
        }
      }

      td {
        @include table-cell-base;
        height: 80px;
        
        &:nth-child(2) {
          white-space: normal;
          word-wrap: normal;
          overflow-wrap: normal;
          max-width: none;
          min-width: 230px;
        }
        
        &:not(:nth-child(2)):not(.empty-state) {
          @include text-truncate;
        }
        
        &:empty::before {
          content: '\00a0';
        }

        .artist-link {
          color: $text-primary;
          text-decoration: none;
          transition: color $transition-normal;
          cursor: pointer;
          display: inline-block;
          min-height: 44px;
          min-width: 44px;
          padding: 8px 4px;
          margin: -8px -4px;
          border-radius: 4px;
          
          &:hover {
            color: $primary-color;
            text-decoration: underline;
            background-color: rgba(255, 255, 255, 0.1);
          }
          
          &:visited {
            color: $text-primary;
          }
          
          &:focus {
            outline: 2px solid $primary-color;
            outline-offset: 2px;
          }
          
          &:visited:hover {
            color: $primary-color;
          }
        }
      }
    }
    
    // Empty state styling
    .empty-state {
      text-align: center;
      padding: $spacing-xxxl $spacing-xl;
      color: $text-secondary;
      min-height: 200px;
      @include flex-column;
      @include flex-center;
      border-bottom: none;
      
      h3 {
        margin: 0 0 $spacing-md 0;
        color: $text-secondary;
        font-size: $font-size-xl;
      }
      
      p {
        margin: 0;
        font-size: $font-size-base;
      }
    }
  }
}

// Desktop styles - prevent horizontal scrolling
@media (min-width: 1025px) {
  .table-container {
    overflow-x: hidden; // Prevent horizontal scrolling on desktop
  }
}

// Tablet/Medium screen styles - hide desktop columns at 1150px and below
@media (max-width: 1150px) {
  .music-table {
    // Hide Year, Own, Want, and Actions columns
    thead th[data-sort="year"], // Year column
    tbody td:nth-child(3) {
      display: none !important;
    }
    
    thead th.column-own, // Own column
    tbody td:nth-child(4) {
      display: none !important;
    }
    
    thead th.column-want, // Want column  
    tbody td:nth-child(5) {
      display: none !important;
    }
    
    thead th.column-actions, // Actions column
    tbody td:nth-child(6) {
      display: none !important;
    }
  }
}

// Mobile responsive styles
@include mobile {
  .table-container {
    max-height: calc(100vh - 200px); // Constrain height on mobile to prevent overlap
    overflow-y: auto; // Enable vertical scrolling within container
  }
  
  .music-table {
    font-size: $font-size-base;
    
    th,
    td {
      padding: $spacing-md $spacing-sm;
    }
    
    th:last-child,
    td:last-child {
      display: none;
    }
    
    th:nth-child(1),
    td:nth-child(1) {
      width: 100px;
      min-width: 100px;
      max-width: 100px;
    }
    
    th:nth-child(2),
    td:nth-child(2) {
      width: auto;
      min-width: 250px;
      max-width: calc(100vw - 140px);
    }
    
    thead th:nth-child(3),
    tbody td:nth-child(3) {
      display: none !important;
    }
    
    thead th:nth-child(4),
    tbody td:nth-child(4) {
      display: none !important;
    }
    
    thead th:nth-child(5),
    tbody td:nth-child(5) {
      display: none !important;
    }
    
    thead th:nth-child(6),
    tbody td:nth-child(6) {
      display: none !important;
    }
    
    th[colspan="2"] + th,
    th[colspan="2"] + th + th,
    th[colspan="2"] + th + th + th,
    th[colspan="2"] + th + th + th + th {
      display: none !important;
    }
  }
}
