@use '../base/variables' as *;
@use '../base/mixins' as *;

// ==========================================================================
// Table Components
// ==========================================================================

// Table container
.table-container {
  background: $bg-primary;
  border-radius: $border-radius-xxl;
  box-shadow: $shadow-md;
  overflow: hidden;
  min-height: 400px;
  width: 100%;
  max-height: 80vh;
  overflow-y: auto;
  overflow-x: auto;
}

// Music table
.music-table {
  width: 100%;
  border-collapse: collapse;
  table-layout: auto;
  background: $bg-primary;
  min-height: 400px;
}

// Table header
.music-table thead {
  position: sticky;
  top: 0;
  z-index: 10;
  background: $bg-primary;
  height: 60px;
  
  tr {
    height: 60px;
  }
}

.music-table th {
  @include table-header-base;
  height: 60px;
}

// Sortable headers
.sortable-header {
  cursor: pointer;
  user-select: none;
  position: relative;
  transition: background-color $transition-fast;
  
  &:hover {
    background-color: $bg-light !important;
  }
  
  &.sort-asc .sort-indicator::after {
    content: ' ▲';
    color: #007bff;
    font-weight: bold;
  }
  
  &.sort-desc .sort-indicator::after {
    content: ' ▼';
    color: #007bff;
    font-weight: bold;
  }
}

.sort-indicator {
  display: inline-block;
  margin-left: $spacing-sm;
  font-size: 0.8em;
}

// Column widths
.music-table {
  th:nth-child(1):not(.empty-state),
  td:nth-child(1):not(.empty-state) {
    width: 80px;
    min-width: 80px;
    max-width: 80px;
  }
  
  th:nth-child(2):not(.empty-state),
  td:nth-child(2):not(.empty-state) {
    width: auto;
    min-width: 200px;
  }
  
  th:nth-child(3):not(.empty-state),
  td:nth-child(3):not(.empty-state) {
    width: 90px;
    min-width: 90px;
    max-width: 90px;
  }
  
  th:nth-child(4):not(.empty-state),
  td:nth-child(4):not(.empty-state) {
    width: 90px;
    min-width: 90px;
    max-width: 90px;
  }
  
  td:nth-child(5):not(.empty-state) {
    width: 80px;
    min-width: 80px;
    max-width: 80px;
  }
  
  th:nth-child(6):not(.empty-state),
  td:nth-child(6):not(.empty-state) {
    width: 180px;
    min-width: 180px;
    max-width: 180px;
  }
  
  th.empty-state,
  td.empty-state {
    width: 100%;
  }
}

// Table body
.music-table tbody {
  background: $bg-primary;
  min-height: 140px;
  
  tr {
    height: 80px;
    
    &:hover {
      background: $bg-secondary;
    }
  }
}

.music-table td {
  @include table-cell-base;
  height: 80px;
  
  &:nth-child(2) {
    white-space: normal;
    word-wrap: normal;
    overflow-wrap: normal;
    max-width: none;
    min-width: 300px;
  }
  
  &:not(:nth-child(2)):not(.empty-state) {
    @include text-truncate;
  }
  
  &:empty::before {
    content: '\00a0';
  }
}

// Ensure Actions column header displays fully
.music-table th:nth-child(6) {
  min-width: 160px !important;
  max-width: none !important;
  overflow: visible !important;
  text-overflow: clip !important;
  white-space: nowrap !important;
}

// Ensure empty state spans full width
.music-table td.empty-state {
  width: 100% !important;
  max-width: none !important;
  min-width: none !important;
}

// Mobile responsive styles
@include mobile {
  .music-table {
    font-size: $font-size-base;
    
    th,
    td {
      padding: $spacing-md $spacing-sm;
    }
    
    th:last-child,
    td:last-child {
      display: none;
    }
    
    th:nth-child(1),
    td:nth-child(1) {
      width: 70px;
      min-width: 70px;
      max-width: 70px;
    }
    
    th:nth-child(2),
    td:nth-child(2) {
      width: auto;
      min-width: 200px;
      max-width: calc(100vw - 120px);
    }
    
    thead th:nth-child(3),
    tbody td:nth-child(3) {
      display: none !important;
    }
    
    thead th:nth-child(4),
    tbody td:nth-child(4) {
      display: none !important;
    }
    
    thead th:nth-child(5),
    tbody td:nth-child(5) {
      display: none !important;
    }
    
    thead th:nth-child(6),
    tbody td:nth-child(6) {
      display: none !important;
    }
    
    th[colspan="2"] + th,
    th[colspan="2"] + th + th,
    th[colspan="2"] + th + th + th,
    th[colspan="2"] + th + th + th + th {
      display: none !important;
    }
  }
}
